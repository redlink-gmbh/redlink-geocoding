image: maven:3-openjdk-11
clone:
  depth: full  # SonarCloud scanner needs the full history to assign issues properly

definitions:
  steps:
    - step: &build
        name: Build
        caches:
          - maven
          - sonar
        script:
          - >
            mvn -V -B -s .ci/settings.xml
            clean
            org.jacoco:jacoco-maven-plugin:prepare-agent
            verify
            org.jacoco:jacoco-maven-plugin:report
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
    - step: &build-test-deploy
        name: Build, Test & Deploy
        caches:
          - maven
          - sonar
          - jib
        script:
          - >
            mvn -V -B -s .ci/settings.xml
            clean
            org.jacoco:jacoco-maven-plugin:prepare-agent
            verify
            org.jacoco:jacoco-maven-plugin:report
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            -Ddocker.local.skip
            -Dnominatim.email=hello@redlink.io -Dgoogle.apiKey=${GOOGLE_APIKEY}
          - >
            mvn -B -s .ci/settings.xml
            package
            javadoc:aggregate-jar
            deploy
            -Dquick
            -Ddocker.local.skip
            -Ddocker.image.namespace="${PRIVATE_DOCKER_REGISTRY_URL}/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}"
            -Ddocker.image.buildId="build${BITBUCKET_BUILD_NUMBER}_${BITBUCKET_COMMIT:0:7}"
            -Djib.to.auth.username="${PRIVATE_DOCKER_REGISTRY_USER}"
            -Djib.to.auth.password="${PRIVATE_DOCKER_REGISTRY_PASS}"
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
    jib: ~/.cache/google-cloud-tools-java/jib

pipelines:
  default:
    - step: *build
  branches:
    master:
      - step: *build-test-deploy
  tags:
    v*:
      - step: *build-test-deploy
